#!/bin/bash

#Souce Params file with enviroment variables
scripts=/home/detoeuf/Manuel/scripts/2014-08-02
source $scripts/config/params 

cd $DATA_LOCATION


#Variables
recipe=muse_scipost
#patterns=(OBJECT WFM-NOAO-N )  #Patterns to seach in the mastersof. Be careful it needs to be in the right order. The patterns are output of the Python program seetype.py
#numsof=7 

stdexp=0001 #In case there are several exposures of STD processed. 

#Create a DATACUBE for each exposure
expnum="$(echo `ls PIXTABLE_OBJECT_* | wc -l`"/24" | bc)"
for i in $(eval echo "{1..$expnum}")
do
	echo $i
	filesof=scipost$i.sof
	> $filesof
	for l in `ls PIXTABLE_OBJECT_*0$i-*.fits`
	do 
		echo `readlink -f $l` PIXTABLE_OBJECT >> $filesof
	done
# Using all the cal from the program or download online for this science verification run
#echo $ESOREX_OUTPUT_DIR/LSF_PROFILE.fits LSF_PROFILE >> $filesof #Also have one from the calibration
echo $CALIB_FILES/lsf_profile_slow_wfm-n.fits LSF_PROFILE   >> $filesof # The one made by the ESORex recipe with data. 
echo $CALIB_FILES/astrometry_wcs_wfm_comm2b.fits ASTROMETRY_WCS   >> $filesof
echo $CALIB_FILES/sky_lines.fits SKY_LINES   >> $filesof
echo $CALIB_FILES/extinct_table.fits EXTINCT_TABLE   >> $filesof
echo $CALIB_FILES/filter_list.fits FILTER_LIST   >> $filesof
# STD can be from calibration or from Data
echo $CALIB_FILES/std_response_wfm-n.fits STD_RESPONSE   >> $filesof #Calibration
#echo $ESOREX_OUTPUT_DIR/STD_RESPONSE_$stdexp.fits STD_RESPONSE >> $filesof
#echo $ESOREX_OUTPUT_DIR/STD_TELLURIC_$stdexp.fits STD_TELLURIC >> $filesof

#taskset -c 0-23 esorex --recipe-config=$RECIPE_CONFIG/$recipe'.rc' $recipe $filesof

mv DATACUBE_FINAL.fits DATACUBE_FINAL_EXP0$i.fits
for j in `ls IMAGE_FOV_*`
do 
	newname=$(echo $j | cut -d "." -f1)
	mv $j "EXP0"$i$newname
done

for k in `ls PIXTABLE_REDUCED_*`
do 
	newname=$(echo $k | cut -d "." -f1)
	mv $k $newname"_EXP0"$i
done


#Create list of product files to productsof.txt
product=(DATACUBE_FINAL_EXP0$i.fits)
for h in "${product[@]}"
do
	if [ -f $h ]; 
	then 
		grep $h productsof.txt > /dev/null 
		if [ $? -eq 0 ];
		then 
			sed -i "/$h/c\\$ESOREX_OUTPUT_DIR/$h `stat -c %y $h`" productsof.txt
		else
			echo $ESOREX_OUTPUT_DIR/$h `stat -c %y $h` >> productsof.txt
		fi
	else
		echo $h " Has not been created yet" >> productsof.txt 
	fi
done
#Update product in script
cp productsof.txt $scripts/products/
cp $filesof $scripts/products/

done
