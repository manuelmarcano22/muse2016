#!/bin/bash

#It creates a set-of-frames (sof) to use the muse_bias routine from esorex 
#and create a master bias

#Souce Params file with enviroment variables
source /home/detoeuf/Manuel/scripts/2014-08-02/config/params 

#Change to data location
cd $DATA_LOCATION

#Variables
recipe=muse_bias
filesof=bias.sof
numsof=11 # The ESO takes by set of 11. We make the master with that set.
patterns=(BIAS WFM-NOAO-N) #Patterns to seach in the mastersof. 
#WFM is instrument mode and should be the same as object.  Be careful it needs to be in the right order. The patterns are tags output of the Python program seetype.py. They are sorted also by seetype.py. Should be in chronological ordering. 

a=`echo ${patterns[*]/%/.*} | rev | cut -c 3- | rev`
cat mastersof.txt | grep -Ew "$a" | head -n $numsof > $filesof 


#Split the file and create pre
split $filesof -l 4 --numeric-suffixes=1 --suffix-length=1 'pre'$filesof


for i in `ls 'pre'$filesof*`;
do
	echo $CALIB_FILES/badpix_table.fits BADPIX_TABLE >> $i #Optional BadPixel data in calibration

	#Call to esorex
	taskset -c 0-23 esorex --recipe-config=$RECIPE_CONFIG/$recipe'.rc' $recipe $i 
	mv MASTER_BIAS.fits $i'MASTER_BIAS.fits'
done

#Build a master out of all the preMaster
> $filesof
for i in `ls prebias.sof*`;
do
	echo $ESOREX_OUTPUT_DIR/$i'MASTER_BIAS.fits' BIAS >> $filesof
done


echo $CALIB_FILES/badpix_table.fits BADPIX_TABLE >> $filesof #Optional BadPixel data in calibration

#Call to esorex
taskset -c 0-23 esorex --recipe-config=$RECIPE_CONFIG/$recipe'.rc' $recipe $filesof 


#Create list of product files to productsof.txt
test -f productsof.txt || touch productsof.txt   # Test if it does exist
grep MASTER_BIAS productsof.txt > /dev/null 
if [ $? -eq 0 ];
then 
sed -i "/MASTER_BIAS/c\\$ESOREX_OUTPUT_DIR/MASTER_BIAS.fits MASTER_BIAS" productsof.txt
else
echo $ESOREX_OUTPUT_DIR/MASTER_BIAS.fits MASTER_BIAS >> productsof.txt
fi
