#!/bin/bash

#It creates a set-of-frames (sof) to use the muse_bias routine from esorex 
#and create a master bias

#Souce Params file with enviroment variables
scripts=/home/detoeuf/Manuel/scripts/2014-08-02
source $scripts/config/params 

#Change to data location
cd $DATA_LOCATION

#Variables
recipe=muse_bias
filesof=bias.sof
numsof=11 # The ESO takes by set of 11. We make the master with that set.
patterns=(BIAS WFM-NOAO-N) #Patterns to seach in the mastersof. 
#WFM is instrument mode and should be the same as object.  Be careful it needs to be in the right order. The patterns are tags output of the Python program seetype.py

a=`echo ${patterns[*]/%/.*} | rev | cut -c 3- | rev`
cat cleanmastersof.txt | grep -Ew "$a" | head -n $numsof > $filesof 
echo $CALIB_FILES/badpix_table.fits BADPIX_TABLE >> $filesof #Optional BadPixel data in calibration

#Call to esorex
taskset -c 0-23 esorex --recipe-config=$RECIPE_CONFIG/$recipe'.rc' $recipe $filesof 





#Create list of product files to productsof.txt
test -f productsof.txt || touch productsof.txt   # Test if it does exist
grep MASTER_BIAS productsof.txt > /dev/null 
if [ $? -eq 0 ];
then 
sed -i "/MASTER_BIAS/c\\$ESOREX_OUTPUT_DIR/MASTER_BIAS.fits MASTER_BIAS" productsof.txt
else
echo $ESOREX_OUTPUT_DIR/MASTER_BIAS.fits MASTER_BIAS >> productsof.txt
fi

#Create list of product files to productsof.txt
product=(MASTER_BIAS.fits)
for i in "${product[@]}"
do
	if [ -f $i ]; 
	then 
		grep $i productsof.txt > /dev/null 
		if [ $? -eq 0 ];
		then 
			sed -i "/$i/c\\$ESOREX_OUTPUT_DIR/$i `stat -c %y $i`" productsof.txt
		else
			echo $ESOREX_OUTPUT_DIR/$i `stat -c %y $i` >> productsof.txt
		fi
	else
		echo $i " Has not been created yet" >> productsof.txt 
	fi
done
#Update product in script
cp productsof.txt $scripts/products/
cp $filesof $scripts/products/
