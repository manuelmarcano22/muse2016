# File: /home/detoeuf/.esorex/esorex.rc
#
# Note: This configuration file has been automatically
#       generated by the esorex (v3.11.1) program.
#
# Date: 11-Mar-2015 10:31:01
#
#

# --help
# Display this help and exit. If a recipe name is also given, then help will be
# given for it as well.
esorex.caller.help=FALSE

# --version
# Display version information and exit.
esorex.caller.version=FALSE

# --check-sof-exist
# When TRUE, all the input files must exist  and be readable before calling the
# recipe. This option may also be set using the environment variable
# ESOREX_CHECK_SOF_EXIST.
esorex.caller.check-sof-exist=TRUE

# --config
# Configuration file to be used for EsoRex. This option may also be set using
# the environment variable ESOREX_CONFIG.
#esorex.caller.config=

# --create-config
# Creates a configuration file for Esorex. If set to TRUE a config file
# 'esorex.rc' is created in the '.esorex' directory in $HOME of the user.If a
# filename is specified, a config file will be created accordingly. If a
# recipe is specified in the command line, then the configuration file will
# be created for the recipe instead (called 'recipename.rc') Note that an
# existing file will be overwritten, but a backup file will be copied to
# 'filename.rc.bak' in the same directory. If the filename ends with
# extension .json then a machine-readable JSON format will be used. This
# option may also be set using the environment variable ESOREX_CREATE_CONFIG.
esorex.caller.create-config=FALSE

# --link-dir
# The directory in which a symbolic link to each of the product files should be
# written. The enable/disable switch to control whether the link is actually
# made is the '--suppress-link' option. This option may also be set using the
# environment variable ESOREX_LINK_DIR.
esorex.caller.link-dir=/tmp

# --log-dir
# Directory where to place the logfile. This option may also be set using the
# environment variable ESOREX_LOG_DIR.
esorex.caller.log-dir=/home/detoeuf

# --log-file
# Filename of logfile. This option may also be set using the environment
# variable ESOREX_LOG_FILE.
esorex.caller.log-file=esorex.log

# --log-level
# Controls the severity level of messages that will be printed to the logfile.
# This option may also be set using the environment variable
# ESOREX_LOG_LEVEL. <debug | info | warning | error | off>
esorex.caller.log-level=debug

# --no-datamd5
# Disables the computation of the MD5 data hash for FITS product files. This
# option may also be set using the environment variable ESOREX_NO_DATAMD5.
esorex.caller.no-datamd5=FALSE

# --no-checksum
# Disables the computation of the standard FITS product checksums. This option
# may also be set using the environment variable ESOREX_NO_CHECKSUM.
esorex.caller.no-checksum=FALSE

# --man-page
# Display a manual page for the specified recipe, and then exit. Note that this
# option only applies to recipes, and that it does nothing for esorex by
# itself. See also the '--help' option. This option may also be set using the
# environment variable ESOREX_MAN_PAGE.
esorex.caller.man-page=FALSE

# --mem-check
# Report on memory status at completion of recipe execution. This option may
# also be set using the environment variable ESOREX_MEM_CHECK.
esorex.caller.mem-check=TRUE

# --msg-level
# Controls the severity level of messages that will be printed to the terminal.
# This option may also be set using the environment variable
# ESOREX_MSG_LEVEL. <debug | info | warning | error | off>
esorex.caller.msg-level=debug

# --output-dir
# The directory where the product files should be finally moved to (all products
# are first created in the current dir). This option may also be set using
# the environment variable ESOREX_OUTPUT_DIR.
#esorex.caller.output-dir=/home/detoeuf
esorex.caller.output-dir=/home/detoeuf/Manuel/data

# --output-prefix
# Prefix applied to any output file. For example, specifying 'pre' would
# translate 'filename.fits' to 'pre_0000.fits'. See also the
# '--suppress-prefix' option. This option may also be set using the
# environment variable ESOREX_OUTPUT_PREFIX.
esorex.caller.output-prefix=out

# --output-readonly
# When TRUE, any existing product files in the specified output directory will
# be set to read-only, for user, group and other. If FALSE, then EsoRex will
# use the default permissions for that account/directory. destroy any
# pre-existing files. This option exists for the Paranal operations
# environment. This option can additionally be used to prevent EsoRex from
# overwriting pre-existing files. This option may also be set using the
# environment variable ESOREX_OUTPUT_READONLY.
esorex.caller.output-readonly=FALSE

# --paf-config
# Configuration file for creation of PAF files. This option may also be set
# using the environment variable ESOREX_PAF_CONFIG.
#esorex.caller.paf-config=

# --params
# List the input parameters and their current settings (whether from the command
# line or a configuration file) for the esorex application. Parameters are
# labelled using the parameter's alias. If a recipe is also specified, then
# the list of its parameters will also be generated in the same way. This
# option may also be set using the environment variable ESOREX_PARAMS.
esorex.caller.params=FALSE

# --products-sof
# Output file which contains the FITS files created by the recipe. If the
# filename ends with extension .json then a machine-readable JSON formatwill
# be used. This option may also be set using the environment variable
# ESOREX_PRODUCTS_SOF.
#esorex.caller.products-sof=prod.sof

# --recipes
# Display a list of all available recipes (that are available in the directory
# tree specified with '--recipe-dir'). This option may also be set using the
# environment variable ESOREX_RECIPES.
esorex.caller.recipes=FALSE

# --recipe-config
# Configuration file for any selected recipe. This option may also be set using
# the environment variable ESOREX_RECIPE_CONFIG.
#esorex.caller.recipe-config=

# --recipe-dir
# Directory containing recipe libraries. Note that esorex will recursively
# search not only the specified directory, but all sub-directories below it
# as well. Multiple directory heads may be specified, by separating the
# starting paths with colons (:). This option may also be set using the
# environment variable ESOREX_PLUGIN_DIR.
#esorex.caller.recipe-dir=/home/detoeuf
esorex.caller.recipe-dir=/opt/reflex/install/lib/esopipes-plugins/muse-1.0.1

# --suppress-link
# When TRUE, no symbolic link is created to the output product. However, if
# FALSE, then a symbolic link is created in the directory specified with the
# option '--link-dir' for each product that is created by the recipe. This
# option may also be set using the environment variable ESOREX_SUPPRESS_LINK.
esorex.caller.suppress-link=TRUE

# --suppress-prefix
# When TRUE, the original name of the output product, as produced by the recipe,
# is maintained. If FALSE, then the name of the output file is changed to the
# "prefix_number" format. The prefix can be altered using the
# '--output-prefix' option. This option may also be set using the environment
# variable ESOREX_SUPPRESS_PREFIX.
esorex.caller.suppress-prefix=TRUE

# --time
# Measure and show the recipe's execution time. This option may also be set
# using the environment variable ESOREX_TIME.
esorex.caller.time=TRUE

# --unload-plugin
# When TRUE, the plugin is unloaded after execution. If FALSE, the plugin is not
# unloaded after processing, so that a software like, e.g. valgrind, can be
# used for debugging the executed recipe. This option may also be set using
# the environment variable ESOREX_UNLOAD_PLUGIN.
esorex.caller.unload-plugin=TRUE

#
# End of file
