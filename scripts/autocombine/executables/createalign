#!/bin/bash

#Souce Params file with enviroment variables
scripts=/home/detoeuf/Manuel/scripts/autocombine
source $scripts/config/params 

#Variables
cd $ESOREX_OUTPUT_DIR
ESOREX_OUTPUT_DIR_old=$ESOREX_OUTPUT_DIR
for i in $(find . -type d -name 'region*')
do
	exposure=`echo $i | cut -d '/' -f2`
	ESOREX_OUTPUT_DIR=$ESOREX_OUTPUT_DIR/$exposure
	cd $ESOREX_OUTPUT_DIR
	
	recipe=muse_exp_align
	filesof=align.sof
	ESOREX_LOG_DIR=$ESOREX_OUTPUT_DIR_old/logs
	
	
	> $filesof
	for i in `ls *IMAGE*.fits`
	do
		        echo `readlink -f $i` IMAGE_FOV >> $filesof
		done
	
	
	#Call to /home/detoeuf/muse1.2.1/bin/esorex
	export ESOREX_LOG_FILE=${0##*/}
	taskset -c 0-23 $HOME/muse1.2.1/bin/esorex --recipe-config=$RECIPE_CONFIG/$recipe'.rc' $recipe $filesof 
	
	
	test -f productsof.txt || touch productsof.txt   # Test if it does exist
	
	#Create list of product files to productsof.txt
	product=(OFFSET_LIST.fits)
	for i in "${product[@]}"
	do
		if [ -f $i ]; 
		then 
			grep $i productsof.txt > /dev/null 
			if [ $? -eq 0 ];
			then 
				sed -i "/$i/c\\$ESOREX_OUTPUT_DIR/$i `stat -c %y $i`" productsof.txt
			else
				echo $ESOREX_OUTPUT_DIR/$i `stat -c %y $i` >> productsof.txt
			fi
		else
			echo $i " Has not been created yet" >> productsof.txt 
		fi
	done
	#Update product in script
	cp productsof.txt $scripts/products/
	cp $filesof $scripts/products/
	cp $ESOREX_LOG_DIR/$ESOREX_LOG_FILE $scripts/products/
	ESOREX_OUTPUT_DIR=$ESOREX_OUTPUT_DIR_old
done
